# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - '*'
#- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  jdkVersion: '1.11'
  jarName: 'ado-pipeline-simple-java-app-0.0.1-SNAPSHOT.jar'

stages:
- stage: 'Pre_Build'
  jobs:
  - job: 'Validate'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(jdkVersion)'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'test'

- stage: 'Build'
  jobs:
  - job: 'BuildPublishJar'
    displayName: 'Build & Publish Jar'
    steps:
    - task: Maven@3
      displayName: 'Build Jar File'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(jdkVersion)'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        # testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Jar File'
      inputs:
        PathtoPublish: 'target/$(jarName)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - script: 'echo $(Build.ArtifactStagingDirectory)'
      displayName: 'Play Ground'


